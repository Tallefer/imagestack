==gausstransform==
--
_This page was auto-generated from the ImageStack -help operator. Direct edits to it will be lost. Use the comments below to discuss this operation._
--

-gausstransform replaces each pixel in the top image on the stack with a
Gaussian sum of other "nearby" pixels. Nearby is not defined spatially. Instead
the position of each pixel (in arbitrary-dimensional space) is given by the
second image on the stack. -gausstransform takes one argument to indicate the
method to use, and then one argument per channel in the second image in the
stack to indicate the standard deviation of the desired Gaussian in that
dimension. Methods available are: exact (slow!); grid (the bilateral grid of
Paris et al.); permutohedral (the permutohedral lattice of Adams et al.); and
gkdtree (the gaussian kdtree of Adams et al.). If only one argument is given,
the standard deviations used are all one. If two arguments are given, the
standard deviation is the same in each dimension.

Usage: ImageStack -load pics/dog1.jpg \
                  -dup -evalchannels x y [0] [1] [2] -pull 1 \
                  -evalchannels [0] [1] [2] 1 \
                  -gausstransform permutohedral 4 4 0.1 0.1 0.1 \
                  -evalchannels [0]/[3] [1]/[3] [2]/[3] \
                  -save bilateral_filtered_dog.jpg
==gausstransform==
--
_This page was auto-generated from the ImageStack -help operator. Direct edits to it will be lost. Use the comments below to discuss this operation._
--

-gausstransform replaces each pixel in the top image on the stack with a
Gaussian sum of other "nearby" pixels. Nearby is not defined spatially. Instead
the position of each pixel (in arbitrary-dimensional space) is given by the
second image on the stack. -gausstransform takes one argument to indicate the
method to use, and then one argument per channel in the second image in the
stack to indicate the standard deviation of the desired Gaussian in that
dimension. Methods available are: exact (slow!); grid (the bilateral grid of
Paris et al.); permutohedral (the permutohedral lattice of Adams et al.); and
gkdtree (the gaussian kdtree of Adams et al.). If only one argument is given,
the standard deviations used are all one. If two arguments are given, the
standard deviation is the same in each dimension.

Usage: ImageStack -load pics/dog1.jpg \
                  -dup -evalchannels x y [0] [1] [2] -pull 1 \
                  -evalchannels [0] [1] [2] 1 \
                  -gausstransform permutohedral 4 4 0.1 0.1 0.1 \
                  -evalchannels [0]/[3] [1]/[3] [2]/[3] \
                  -save bilateral_filtered_dog.jpg
==gausstransform==
--
_This page was auto-generated from the ImageStack -help operator. Direct edits to it will be lost. Use the comments below to discuss this operation._
--
{{{

-gausstransform replaces each pixel in the top image on the stack with a
Gaussian sum of other "nearby" pixels. Nearby is not defined spatially. Instead
the position of each pixel (in arbitrary-dimensional space) is given by the
second image on the stack. -gausstransform takes one argument to indicate the
method to use, and then one argument per channel in the second image in the
stack to indicate the standard deviation of the desired Gaussian in that
dimension. Methods available are: exact (slow!); grid (the bilateral grid of
Paris et al.); permutohedral (the permutohedral lattice of Adams et al.); and
gkdtree (the gaussian kdtree of Adams et al.). If only one argument is given,
the standard deviations used are all one. If two arguments are given, the
standard deviation is the same in each dimension.

Usage: ImageStack -load pics/dog1.jpg \
                  -dup -evalchannels x y [0] [1] [2] -pull 1 \
                  -evalchannels [0] [1] [2] 1 \
                  -gausstransform permutohedral 4 4 0.1 0.1 0.1 \
                  -evalchannels [0]/[3] [1]/[3] [2]/[3] \
                  -save bilateral_filtered_dog.jpg
}}}
